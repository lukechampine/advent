package main

import (
	"github.com/lukechampine/advent/utils"
)

const input = `#...|.|.|....##.##....|.#...|.|.|......#....|#...#
#..#|.#...||#...|.#..#...#......|.|#..#.##....#|#.
.#..##...#|.|..#|....|..#|.|#.#|.......#..#...|#..
.|.|#..|.#....##......#..#.#...|....|#...|#.......
#....|#.#.|..|..#.....#|.#.||.#.|.....#..#..#.....
.#||##..#..|.|....#.|....#.#..|.....#.#|........|.
.|###|#.|..##|#|...#|||.|..|.|.|#|.#.#|.#...#.|.##
..||#..##.||..|...|..|.||.|#...|..|..#....###.#...
..|......##.....#.###......#.#.......|...|.#|...#|
#..|...|.|#|.|....|#.......|.#.....#|.#.....#..#.#
.#.|..#..#|##..|||..##............#..|..#..|...|.#
.##.#|....|..#..|.#.|....|.||#...|..#||......|#...
.....#....#.#.#.#.||.....#.##|..#...#.|......#....
##.#|.#...#.|..|.|....#|#.....#.|.###|#....#|||...
......|..#......#..|...|..#|##..#|.......||.|....|
..#......#.|.|#....##.##.#.|.|..|##..###....#||.|#
.#|.....#...#..#.||.#||.##...||....|.......|#...##
.......||..|#.|##...#.|.#..|..|.#.|####|.||...|#|.
#...#.#..|##..|#..|.#.|#.|##..|..|#....#.|.....#..
|....#..#.....|..##..#..|.|#..||#|#...||..#|..|...
........##......|......|......||.......##.|#.||..|
|..#.||.#.#..#..|||....|#|..|.#|...|..|.#.||.|.|.|
.#...|..|.|#.......|#.|......|...#|||....#..|...|#
...###|...#..|..#.|...|#|.....##.....|.##.||.|.##|
#..##.|.||#.#....#|.....|#..||...#.||.##|.#..|..|.
|....|#.....|...#..|..|..#..#|........||..#.|.....
..#......|..#....#.|....#.|###|.##|.|...#.#...||..
..#.|#....|...#||.|.#...#..#...#..#.|.#|.||..|#..|
....|.|#..|...||..||#.|..#||.|#..#.#....#.|.....#|
#|.|..|..#......|#|||.##.#......#.|#..#.|.##.#|..#
..#|......##.|.#...|.#...#....#.###|#......|......
..#.#.#|...#|....|...#.##...##...#..#|..|#.|###...
|||.#..###.|......|..#.....#...|#.|.|...#...#|..#|
##...#.#|#.|....||....|.....#|....#....|..|....#.#
.........###.#.#..##..|##..#|...#...|...#|###.|..|
.|#.........##.....#.##.|#.#....#....#|....#....#.
.|....#...#||.|.......|.#..#.|..|#...#|.....|...#.
.|#..|||....#..|#|.|.#.||..|.#|.#|#|||.|#||...#.#.
#.#|.|.#...#.#.|||..|...#..#.##....#.#.#|.||....##
.|.|....##..|#|.#...|#.|.|...#..#|#....|#.|.##.##.
...#....#.....#..#...#..#.|#..#.|#.|..#..#.....|..
#...#..|..###|....#.|...##|...#|...#.#....##...#.#
.#.##..#.#.......................|..#|..##.|.|....
|..#|#..|#....#...#....|..##..#||#..#.#.#.|#|.||##
#.#...#.#...##.||...||....#...##|#|....|||#..|.|.|
....#....|.|.....#|#...#..#|#....|#.|.#|.|..#....|
|#.......||.#.|..|......##.||.....||.|..|....||#..
..|#.....|...##.##..#|##|#....####..#|.......#.|..
||#.#.|.##..#.|....#.||###..####||.#||...##.#..#|#
.|....#.....#.....##.#..|#...|||.|....|#..|#|...#.`

func simulate(dst, grid [][]byte) {
	gg := utils.Grid{
		X: len(grid[0]) - 1,
		Y: len(grid) - 1,
	}
	for y := range grid {
		for x := range grid[y] {
			dst[y][x] = grid[y][x]
			p := utils.Pos{X: x, Y: y}
			var trees, lumberyards int
			for _, m := range p.ValidNumpad(gg) {
				if grid[m.Y][m.X] == '|' {
					trees++
				} else if grid[m.Y][m.X] == '#' {
					lumberyards++
				}
			}
			if grid[y][x] == '.' && trees >= 3 {
				dst[y][x] = '|'
			} else if grid[y][x] == '|' && lumberyards >= 3 {
				dst[y][x] = '#'
			} else if grid[y][x] == '#' {
				if lumberyards == 0 || trees == 0 {
					dst[y][x] = '.'
				}
			}
		}
	}
}

func main() {
	// part 1
	lines := utils.Lines(input)
	grid := make([][]byte, len(lines))
	for i := range grid {
		grid[i] = []byte(lines[i])
	}
	grid2 := make([][]byte, len(lines))
	for i := range grid2 {
		grid2[i] = []byte(lines[i])
	}

	for minute := 0; minute < 10; minute++ {
		simulate(grid2, grid)
		grid, grid2 = grid2, grid
	}
	utils.Println(utils.CountGrid(grid, '#') * utils.CountGrid(grid, '|'))

	// part 2
	// manually-obtained cycle of values, starting at minute 9964
	var cycle = []int{
		202272,
		200799,
		198489,
		197925,
		194638,
		197736,
		198996,
		199908,
		201142,
		204227,
		204558,
		207080,
		208705,
		210625,
		210420,
		213658,
		217558,
		219906,
		222870,
		226548,
		227897,
		226501,
		226688,
		227688,
		226080,
		221244,
		218272,
		211904,
	}
	utils.Println(cycle[(1000000000-1-9964)%len(cycle)])
}
